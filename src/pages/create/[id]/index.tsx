import { QueryClient } from "@tanstack/react-query";
import { SnowballBig } from "components";
import { Button } from "components/Button";
import { GetStaticPaths, GetStaticProps, InferGetStaticPropsType } from "next";
import Head from "next/head";
import { useRouter } from "next/router";

import * as S from "styles/create";

const SnowBallCreate = ({
  id,
}: InferGetStaticPropsType<typeof getStaticProps>) => {
  const router = useRouter();
  const handlePrimaryButtonClick = () => {
    router.push(`/snowball/${id}`);
  };

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="descriptio0n" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <S.Layout>
        <S.SnowballLayout>
          <SnowballBig open={0} />
        </S.SnowballLayout>
        <S.Footer>
          <Button onClick={handlePrimaryButtonClick}>스노우볼 만들기</Button>
        </S.Footer>
      </S.Layout>
    </>
  );
};

export default SnowBallCreate;

export const getStaticPaths: GetStaticPaths = async () => ({
  paths: [],
  fallback: "blocking",
});

export const getStaticProps: GetStaticProps = async (context) => {
  // const queryClient = new QueryClient();
  const id = context.params?.id as string;

  return {
    props: {
      id,
      // dehydratedState: dehydrate(queryClient),
    },
  };
};
