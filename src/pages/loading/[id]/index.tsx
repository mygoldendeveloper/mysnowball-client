import { GetStaticPaths, GetStaticProps, InferGetStaticPropsType } from "next";
import Head from "next/head";
import { useRouter } from "next/router";
import { useEffect } from "react";

import * as S from "styles/loading";

const SnowBallCreateLoading = ({
  id,
}: InferGetStaticPropsType<typeof getStaticProps>) => {
  const router = useRouter();
  useEffect(() => {
    setTimeout(() => {
      router.push(`/snowball/${id}`);
    }, 3000);
  });
  return (
    <>
      <Head>
        <title>My Snowball</title>
        <meta
          name="친구의 스노우볼을 채워주세요. "
          content="Generated by My Snowball"
        />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <S.Layout>
        <S.Footer></S.Footer>
      </S.Layout>
    </>
  );
};

export default SnowBallCreateLoading;

export const getStaticPaths: GetStaticPaths = async () => ({
  paths: [],
  fallback: "blocking",
});

export const getStaticProps: GetStaticProps = async (context) => {
  // const queryClient = new QueryClient();
  const id = context.params?.id as string;

  return {
    props: {
      id,
      // dehydratedState: dehydrate(queryClient),
    },
  };
};
